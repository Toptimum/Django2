Пошаговый процесс развертывания проекта:

Часть 1: Подготовка проекта к развертыванию

1. Дорабатываем проект и исправляем баги, проверяем корректность работы всего проекта.
2. Устанавливаем инструмент pip install pip-tools, подробнее на скриншоте http://joxi.ru/eAOylN8S9VjLpm
3. В папке с проектом создаем файл requirements.in со списком установленных пакетов http://joxi.ru/Grqqz98i4Dd3Wr
4. Если использовали виртуальное окружение, можно получить файл requirements.txt простым способом: pip freeze > requirements.txt,
    подробнее http://joxi.ru/Vrwj39Gt7DYBDA

Часть 2: Переход на другую подсистему хранения

5. Для переноса данных необходимо до внесения изменений выполнить их экспорт при помощи команды:
    python manage.py dumpdata -e contenttypes -o db.json, http://joxi.ru/YmEZ80ltwYxZK2
6. Для перехода на базу данных «PostgreSQL» внесем изменения в файл настроек geekshop/settings.py, http://joxi.ru/gmvE39MTqDRqvr
7. При выключении режима отладки необходимо заполнить список разрешенных хостов http://joxi.ru/8An8G91Tz4kzMm

Часть 3: Установка и настройка сервера

8. Скачать и установить среду виртуализации Oracle VM VirtualBox http://joxi.ru/1A5wyaETDY7b3m
9. И создаем новую виртуальную машину http://joxi.ru/LmGR80OCwG1gZr, http://joxi.ru/l2Zj1QztzXQRo2
10. В настройках BIOS активируем функцию https://itremont.info/images/error-virtualbox/4.JPG или подобную.
11. Создали виртуальную машину по образу от Дмитрия, запустили и проверили http://joxi.ru/EA4w9Z0ToY6gx2
12. Установим SSH сервер: sudo apt install openssh-server -y, http://joxi.ru/xAe3JOZIRKyPkm
13. Установим SSH-клиент Putty на свой компьютер http://joxi.ru/a2X0xGjiw3OgD2

14. Устанавливаем FTP сервер на Ubuntu: sudo apt install vsftpd, http://joxi.ru/E2pJV97t7Dkxyr
15. Разрешаем запись данных: sudo nano /etc/vsftpd.conf - раскомментировать строку write_enable=YES.
16. Перезапускаем службу FTP-сервера: sudo systemctl restart vsftpd
17. Заливаем папку проекта на сервер http://joxi.ru/82Q8DNJTw7GZym и меняем права папки на 755 для всех вложенных папок и файлов.

18. Переходим в папку проекта: cd /home/serv/zhitnikov
19. Выполняем команду: sudo apt install python3-pip - через него ставим пакеты на Питоне
20. Настраиваем виртуальное окружение:
    20.1 должны быть в папке проекта: cd /home/serv/zhitnikov,
    20.2 устанавливаем: sudo apt-get install python3-venv,
    20.3 создаем: python3 -m venv django2 и проверяем наличие папки на сервере,
    20.4 активируем окружение: source django2/bin/activate http://joxi.ru/eAOylN8S9VYwPm
21. Устанавливаем зависимости (долго): pip3 install -r requirements.txt, появилось 2 ошибки http://joxi.ru/ZrJnN0xiw87RXr

22. Устанавливаем PostgreSQL: sudo apt-get install postgresql postgresql-contrib
23. Запускаем интерпретатор команд сервера: sudo -u postgres psql
24. Выполняем команды http://joxi.ru/J2bZ9adt0baEG2:
    CREATE DATABASE geekshop;
    CREATE USER django with NOSUPERUSER PASSWORD 'geekbrains';
    GRANT ALL PRIVILEGES ON DATABASE geekshop TO django;
    ALTER ROLE django SET CLIENT_ENCODING TO 'UTF8';
    ALTER ROLE django SET default_transaction_isolation TO 'READ COMMITTED';
    ALTER ROLE django SET TIME ZONE 'Asia/Yekaterinburg';
    Для выхода пишем «\q».

================= врезка по моему проекту =====================================================================================
25. При выполнении миграций: python manage.py migrate - начал ругаться на psycopg2, так что:
    25.1 сначала выполним команду sudo apt-get install postgresql postgresql-contrib libpq-dev python-dev,
    25.2 а затем команду pip install psycopg2 и теперь на psycopg2 не ругается,
    25.3 но ругается на http://joxi.ru/DrlyN9xSVDPybm - НЕ ЗНАЮ КАК ЭТО ИСПРАВИТЬ (команда python manage.py help выполняется).
===================================================================================================================================

25. Выполняем миграции: python manage.py migrate - все выполнено http://joxi.ru/823wbKGT9YWqx2
26. Загружаем данные: python manage.py loaddata db.json - успешно http://joxi.ru/EA4w9Z0ToYWGq2
27. Запускаем проект на сервере: python manage.py runserver - успешно запустился http://joxi.ru/D2P740NiqyKx9m

28. Устаналиваем gunicorn, который будет по технологии wsgi запускать проект (это связка nginx и Django): pip install gunicorn
29. Проверяем, что он работает - выполняем команду в папке проекта под ВО: gunicorn geekshop.wsgi Когда подумаете, что у вас зависло, нажмите Ctrl+C
    http://joxi.ru/krDK80acKqNlDA
30. Делаем связку nginx и gunicorn через сокеты:
    30.1 sudo nano /etc/systemd/system/gunicorn.service
    30.2 Заполняем данными файл - внимательно заменяем User и ExecStart своими данными:
[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=serv
Group=www-data
WorkingDirectory=/home/serv/geekshop
ExecStart=/home/serv/geekshop/django2/bin/gunicorn --access-logfile - --workers 3 --bind unix:/home/serv/geekshop/geekshop.sock geekshop.wsgi

[Install]
WantedBy=multi-user.target
31. Разрешаем службу «gunicorn»: sudo systemctl enable gunicorn,
31.1 запускаем sudo systemctl start gunicorn, 
31.2 и проверяем ее статус: sudo systemctl status gunicorn - все заработало http://joxi.ru/YmEZ80ltwYpNP2 и нажимаем Ctrl+C

32. Устанавливаем web-сервер «nginx»: sudo apt install nginx
33. Настраиваем параметры сайта «geekshop»: sudo nano /etc/nginx/sites-available/geekshop - обязательно исправим данные на свои в файле:
server {
    listen 80;
    server_name 172.20.10.9;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/serv/geekshop;
    }

    location /media/ {
        root /home/serv/geekshop;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/home/serv/geekshop/geekshop.sock;
    }
}
34. Создаем ссылку в папке разрешенных сайтов: sudo ln -s /etc/nginx/sites-available/geekshop /etc/nginx/sites-enabled
35. Проверяем настройки «nginx»: sudo nginx -t - все хорошо http://joxi.ru/L21wvdgTRBE6nr
36. Перезапускаем службу «nginx»: sudo systemctl restart nginx
37. Добавляем разрешения в сетевой экран: sudo ufw allow 'Nginx Full' - правила обновлены http://joxi.ru/KAxQV70UZDyM6r
38. Теперь на своем компе переходим по адресу сервера: 172.20.10.9 и видим рабочий сайт http://joxi.ru/82Q8DNJTw7EV7m 

Все.



дополнительные команды для быстрого ввода:

usertaras
123taras789

cd /home/usertaras/zhitnikov
source django2/bin/activate

python -m pip install -U --force-reinstall pip

python manage.py runserver
python manage.py runserver 192.168.0.79:8000

sudo systemctl status postgresql

python manage.py makemigrations

python manage.py migrate

python manage.py loaddata db.json

sudo apt-get upgrade python3













